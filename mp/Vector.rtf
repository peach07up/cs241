{\rtf1\ansi\ansicpg936\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Light;\f2\fmodern\fcharset0 Courier;
}
{\colortbl;\red255\green255\blue255;\red48\green58\blue166;\red51\green51\blue51;\red249\green249\blue249;
\red98\green98\blue98;\red26\green26\blue26;\red66\green199\blue218;\red19\green151\blue241;\red98\green94\blue76;
\red29\green30\blue26;\red246\green246\blue239;\red88\green209\blue235;\red244\green0\blue95;\red252\green34\blue110;
\red224\green213\blue97;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\qc

\f0\fs48 \cf1 \cb2 \expnd0\expndtw0\kerning0
menu
\fs52 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\fs28 \cf1 \expnd0\expndtw0\kerning0
Title
\fs40 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720
\cf1 \cb2 CS 241 : System Programming\cb1 \
\pard\pardeftab720

\fs28 \cf1 \cb2 \expnd0\expndtw0\kerning0
Add spacer, to align navigation to the right\cb1 \expnd0\expndtw0\kerning0
\
\
\cb2 \expnd0\expndtw0\kerning0
Navigation. We hide it in small screens.
\fs26 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/index.html"}}{\fldrslt \cf1 \cb2 Overview}}\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/mps.html"}}{\fldrslt \cf1 \cb2 MPs}}\
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/labs.html"}}{\fldrslt \cb2 Lab Sections}}\
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/help.html"}}{\fldrslt \cb2 Getting Help}}\
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/schedule.html"}}{\fldrslt \cb2 Schedule}}\
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/staff.html"}}{\fldrslt \cb2 Meet the Crew!}}\
\pard\pardeftab720

\fs40 \cf3 \cb4 \expnd0\expndtw0\kerning0
CS 241\cb1 \
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/index.html"}}{\fldrslt 
\fs26 \cf5 \cb4 \expnd0\expndtw0\kerning0
Overview}}
\fs26 \cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/mps.html"}}{\fldrslt \cf5 \cb4 \expnd0\expndtw0\kerning0
MPs}}\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/labs.html"}}{\fldrslt \cf5 \cb4 \expnd0\expndtw0\kerning0
Lab Sections}}\
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/help.html"}}{\fldrslt \cb4 \expnd0\expndtw0\kerning0
Getting Help}}\
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/schedule.html"}}{\fldrslt \cb4 \expnd0\expndtw0\kerning0
Schedule}}\
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/staff.html"}}{\fldrslt \cb4 \expnd0\expndtw0\kerning0
Meet the Crew!}}\
\pard\pardeftab720

\fs28 \cf6 \expnd0\expndtw0\kerning0
Your content goes here\
\pard\pardeftab720

\fs112 \cf6 \expnd0\expndtw0\kerning0
Vector\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0
\fs26 \cf6 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Contents\uc0\u8232 
\fs32 \cf7 \expnd0\expndtw0\kerning0
Vector\uc0\u8232 Document and Log\u8232 Undefined Behavior\u8232 Compile and Run\u8232 Grading, Submission, and Other Details
\fs28 \cf6 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\f1\fs48 \cf1 \cb8 \expnd0\expndtw0\kerning0
Groundwork For Text Editor and Shell
\f0\fs32 \cf6 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\fs28 \cf6 \expnd0\expndtw0\kerning0
You are an intern for Macrohard and your team has decided to have you write a text editor and shell (more details for each when the time comes), which everyone on the team will use. These projects will take you several weeks and your mentor has decided on the following timetable:\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls2\ilvl0\cf6 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Week A: Implement a Vector and Document/Log\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Week B: Implement a Text Editor\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Week C: Implement a Shell\
\pard\pardeftab720
\cf6 \expnd0\expndtw0\kerning0
The Text Editor will be a 1 line text editor that will accept commands from stdin. Your mentor has decided to abstract away documents for this text editor.\
The Shell is a terminal. Like all good terminals; your shell will need to remember what commands its user has given it. Your mentor has decided to abstract all of this away as a log.\
Now your mentor has realized that a log and document are not that different in the sense they are both just an array of strings. So to implement the log and document your mentor has decided that you will create a \'93vector\'94 to store strings.\
\pard\pardeftab720

\f1\fs48 \cf1 \cb8 \expnd0\expndtw0\kerning0
Vector
\f0\fs32 \cf6 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\fs28 \cf6 \expnd0\expndtw0\kerning0
A vector is an array that grows and shrinks as a user adds and removes items from it. However your vector will need to be rich with enough features so one can easily create a log or document from it. Your implementation of a vector should go in 
\f2 \expnd0\expndtw0\kerning0
vector.c
\f0 \expnd0\expndtw0\kerning0
, which is the only file that will be sent to your team lead for review. As an intern looking to become a fulltime employee, you should create testcases in 
\f2 \expnd0\expndtw0\kerning0
vector_test.c
\f0 \expnd0\expndtw0\kerning0
 to show that you are a responsible programmer. Your mentor has left notes in 
\f2 \expnd0\expndtw0\kerning0
vector.h
\f0 \expnd0\expndtw0\kerning0
 on how you should implement this vector.\
\pard\pardeftab720

\f1\fs48 \cf1 \cb8 \expnd0\expndtw0\kerning0
Document and Log
\f0\fs32 \cf6 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\fs28 \cf6 \expnd0\expndtw0\kerning0
Your document and log are really similar, so your mentor has negotiated with the team lead for you to only implement one of them. The mentor has chosen for you to implement the document. Both the document and log will use your vector to do all the heavy lifting. Still there are some functions that your document needs to have that your vector shouldn\'92t. Your mentor has provided all the trivial functions for you that assume a correctly implemented vector. The only file that will be reviewed by your team lead is 
\f2 \expnd0\expndtw0\kerning0
document.c
\f0 \expnd0\expndtw0\kerning0
. Since Macrohard frowns on interns who rely on QAs to catch their mistakes you are encouraged to write your own testcases in 
\f2 \expnd0\expndtw0\kerning0
document_test.c
\f0 \expnd0\expndtw0\kerning0
. Your mentor has left some notes in 
\f2 \expnd0\expndtw0\kerning0
document.h
\f0 \expnd0\expndtw0\kerning0
.\
\pard\pardeftab720

\f1\fs48 \cf1 \cb8 \expnd0\expndtw0\kerning0
Undefined Behavior
\f0\fs32 \cf6 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\fs28 \cf6 \expnd0\expndtw0\kerning0
Undefined Behavior is simply a scenario or edge case for which there is no documentation describing how the code should react. For example try finding in the man pages what happens when you feed NULL in 
\f2 \expnd0\expndtw0\kerning0
strcmp()
\f0 \expnd0\expndtw0\kerning0
. Your mentor will not answer questions like \'93What if my user wants an element past the end of the vector?\'94, because that is undefined behavior. So for the entirety of this MP you should use 
\f2 \expnd0\expndtw0\kerning0
assert()
\f0 \expnd0\expndtw0\kerning0
 statements to check that your user is passing your function valid input before operating on the input. For example if you were implementing 
\f2 \expnd0\expndtw0\kerning0
strcmp(const char *s1, const char *s2)
\f0 \expnd0\expndtw0\kerning0
 then your code should look like the following:\
\pard\pardeftab720

\f2\fs32 \cf9 \cb10 \expnd0\expndtw0\kerning0
#include <assert.h>\
\pard\pardeftab720
\cf11 \expnd0\expndtw0\kerning0
strcmp(\cf12 \expnd0\expndtw0\kerning0
const\cf1 \expnd0\expndtw0\kerning0
 \cf12 \expnd0\expndtw0\kerning0
char\cf1 \expnd0\expndtw0\kerning0
 \cf13 \expnd0\expndtw0\kerning0
*\cf11 \expnd0\expndtw0\kerning0
s1,\cf1 \expnd0\expndtw0\kerning0
 \cf12 \expnd0\expndtw0\kerning0
const\cf1 \expnd0\expndtw0\kerning0
 \cf12 \expnd0\expndtw0\kerning0
char\cf1 \expnd0\expndtw0\kerning0
 \cf13 \expnd0\expndtw0\kerning0
*\cf11 \expnd0\expndtw0\kerning0
s2)\cf1 \expnd0\expndtw0\kerning0
 \cf11 \expnd0\expndtw0\kerning0
\{\cf1 \expnd0\expndtw0\kerning0
\
    \cf11 \expnd0\expndtw0\kerning0
assert(s1\cf1 \expnd0\expndtw0\kerning0
 \cf13 \expnd0\expndtw0\kerning0
!=\cf1 \expnd0\expndtw0\kerning0
 \cf11 \expnd0\expndtw0\kerning0
NULL\cf1 \expnd0\expndtw0\kerning0
 \cf13 \expnd0\expndtw0\kerning0
&&\cf1 \expnd0\expndtw0\kerning0
 \cf11 \expnd0\expndtw0\kerning0
s2\cf1 \expnd0\expndtw0\kerning0
 \cf13 \expnd0\expndtw0\kerning0
!=\cf1 \expnd0\expndtw0\kerning0
 \cf11 \expnd0\expndtw0\kerning0
NULL);\cf1 \expnd0\expndtw0\kerning0
\
    \cf9 \expnd0\expndtw0\kerning0
// Compare the two strings\
\cf1 \expnd0\expndtw0\kerning0
    \cf11 \expnd0\expndtw0\kerning0
.\cf1 \expnd0\expndtw0\kerning0
\
    \cf11 \expnd0\expndtw0\kerning0
.\cf1 \expnd0\expndtw0\kerning0
\
    \cf11 \expnd0\expndtw0\kerning0
.\cf1 \expnd0\expndtw0\kerning0
\
    \cf12 \expnd0\expndtw0\kerning0
return\cf1 \expnd0\expndtw0\kerning0
 \cf11 \expnd0\expndtw0\kerning0
blah;\cf1 \expnd0\expndtw0\kerning0
\
\cf11 \expnd0\expndtw0\kerning0
\}\cf1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\f1\fs48 \cf1 \cb8 \expnd0\expndtw0\kerning0
Compile and Run
\f0\fs32 \cf6 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\fs28 \cf6 \expnd0\expndtw0\kerning0
To compile the release version of the code run:\
\pard\pardeftab720

\f2\fs32 \cf1 \cb10 \expnd0\expndtw0\kerning0
make clean\
make\
\pard\pardeftab720

\f0\fs28 \cf6 \cb1 \expnd0\expndtw0\kerning0
To compile your code in debug mode, run 
\f2 \expnd0\expndtw0\kerning0
make debug
\f0 \expnd0\expndtw0\kerning0
 instead of 
\f2 \expnd0\expndtw0\kerning0
make
\f0 \expnd0\expndtw0\kerning0
\
To test vector:\
\pard\pardeftab720

\f2\fs32 \cf1 \cb10 \expnd0\expndtw0\kerning0
./vector_test\
\pard\pardeftab720

\f0\fs28 \cf6 \cb1 \expnd0\expndtw0\kerning0
or\
\pard\pardeftab720

\f2\fs32 \cf1 \cb10 \expnd0\expndtw0\kerning0
./vector_test-debug\
\pard\pardeftab720

\f0\fs28 \cf6 \cb1 \expnd0\expndtw0\kerning0
To test document:\
\pard\pardeftab720

\f2\fs32 \cf1 \cb10 \expnd0\expndtw0\kerning0
./document_test\
\pard\pardeftab720

\f0\fs28 \cf6 \cb1 \expnd0\expndtw0\kerning0
or\
\pard\pardeftab720

\f2\fs32 \cf1 \cb10 \expnd0\expndtw0\kerning0
./document_test-debug\
\pard\pardeftab720

\f1\fs48 \cf1 \cb8 \expnd0\expndtw0\kerning0
Grading, Submission, and Other Details
\f0\fs32 \cf6 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\fs28 \cf6 \expnd0\expndtw0\kerning0
Please fully read details on {\field{\*\fldinst{HYPERLINK "https://courses.engr.illinois.edu/cs241/#/overview%23integrity"}}{\fldrslt \cf14 \expnd0\expndtw0\kerning0
Academic Honesty}}. These are shared between all MPs in CS 241.\
We will be using Subversion as our hand-in system this semester. Our grading system will checkout your most recent (pre-deadline) commit for grading. Therefore, to hand in your code, all you have to do is commit it to your Subversion repository.\
To check out the provided code for 
\f2 \expnd0\expndtw0\kerning0
vector
\f0 \expnd0\expndtw0\kerning0
 from the class repository, go to your cs241 directory (the one you checked out for \'93know your tools\'94) and run:\
\pard\pardeftab720

\f2\fs32 \cf1 \cb10 \expnd0\expndtw0\kerning0
svn up\
\pard\pardeftab720

\f0\fs28 \cf6 \cb1 \expnd0\expndtw0\kerning0
If you run 
\f2 \expnd0\expndtw0\kerning0
ls
\f0 \expnd0\expndtw0\kerning0
 you will now see a 
\f2 \expnd0\expndtw0\kerning0
vector
\f0 \expnd0\expndtw0\kerning0
 folder, where you can find this assignment! To commit your changes (send them to us) type:\
\pard\pardeftab720

\f2\fs32 \cf1 \cb10 \expnd0\expndtw0\kerning0
svn ci -m \cf15 \expnd0\expndtw0\kerning0
"mp1 submission"\cf1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\f0\fs28 \cf6 \cb1 \expnd0\expndtw0\kerning0
Your repository directory can be viewed from a web browser from the following URL: {\field{\*\fldinst{HYPERLINK "https://subversion.ews.illinois.edu/svn/sp16-cs241/NETID/vector"}}{\fldrslt \cf14 \expnd0\expndtw0\kerning0
https://subversion.ews.illinois.edu/svn/sp16-cs241/NETID/vector}} where NETID is your University NetID. It is important to check that the files you expect to be graded are present and up to date in your svn copy.}