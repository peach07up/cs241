{\rtf1\ansi\ansicpg936\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Light;\f2\fmodern\fcharset0 Courier;
}
{\colortbl;\red255\green255\blue255;\red48\green58\blue166;\red51\green51\blue51;\red249\green249\blue249;
\red98\green98\blue98;\red26\green26\blue26;\red66\green199\blue218;\red19\green151\blue241;\red252\green34\blue110;
\red88\green209\blue235;\red29\green30\blue26;\red244\green0\blue95;\red246\green246\blue239;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\qc

\f0\fs48 \cf1 \cb2 \expnd0\expndtw0\kerning0
menu
\fs52 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\fs28 \cf1 \expnd0\expndtw0\kerning0
Title
\fs40 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720
\cf1 \cb2 CS 241 : System Programming\cb1 \
\pard\pardeftab720

\fs28 \cf1 \cb2 \expnd0\expndtw0\kerning0
Add spacer, to align navigation to the right\cb1 \expnd0\expndtw0\kerning0
\
\
\cb2 \expnd0\expndtw0\kerning0
Navigation. We hide it in small screens.
\fs26 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/index.html"}}{\fldrslt \cf1 \cb2 Overview}}\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/mps.html"}}{\fldrslt \cf1 \cb2 \expnd0\expndtw0\kerning0
MPs}}\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/labs.html"}}{\fldrslt \cf1 \cb2 \expnd0\expndtw0\kerning0
Lab Sections}}\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/help.html"}}{\fldrslt \cf1 \cb2 \expnd0\expndtw0\kerning0
Getting Help}}\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/schedule.html"}}{\fldrslt \cf1 \cb2 \expnd0\expndtw0\kerning0
Schedule}}\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/staff.html"}}{\fldrslt \cf1 \cb2 \expnd0\expndtw0\kerning0
Meet the Crew!}}\
\pard\pardeftab720

\fs40 \cf3 \cb4 \expnd0\expndtw0\kerning0
CS 241\cb1 \
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/index.html"}}{\fldrslt 
\fs26 \cf5 \cb4 \expnd0\expndtw0\kerning0
Overview}}
\fs26 \cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/mps.html"}}{\fldrslt \cf5 \cb4 \expnd0\expndtw0\kerning0
MPs}}\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/labs.html"}}{\fldrslt \cf5 \cb4 \expnd0\expndtw0\kerning0
Lab Sections}}\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/help.html"}}{\fldrslt \cf5 \cb4 \expnd0\expndtw0\kerning0
Getting Help}}\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/schedule.html"}}{\fldrslt \cf5 \cb4 \expnd0\expndtw0\kerning0
Schedule}}\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://illinois-cs.github.io/staff.html"}}{\fldrslt \cf5 \cb4 \expnd0\expndtw0\kerning0
Meet the Crew!}}\
\pard\pardeftab720

\fs28 \cf6 \expnd0\expndtw0\kerning0
Your content goes here\
\pard\pardeftab720

\fs112 \cf6 \expnd0\expndtw0\kerning0
Ideal Indirection\
\pard\pardeftab720

\fs28 \cf6 \expnd0\expndtw0\kerning0
\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0
\b \cf6 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Due Date(s):
\b0 \expnd0\expndtw0\kerning0
 4/01 11:59pm 
\fs26 \expnd0\expndtw0\kerning0
Contents\uc0\u8232 
\fs32 \cf7 \expnd0\expndtw0\kerning0
Learning Objectives\uc0\u8232 Required Reading\u8232 Overview\u8232 MMU.c\u8232 Running the simulator\u8232 Testing
\fs28 \cf6 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\f1\fs48 \cf1 \cb8 \expnd0\expndtw0\kerning0
Learning Objectives
\f0\fs32 \cf6 \cb1 \expnd0\expndtw0\kerning0
\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls2\ilvl0
\fs28 \cf6 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Virtual memory\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
The virtual address translation process\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Memory Management Unit (MMU)\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Page Tables\
\ls2\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Translation Lookaside Buffer (TLB)\
\pard\pardeftab720

\f1\fs48 \cf1 \cb8 \expnd0\expndtw0\kerning0
Required Reading
\f0\fs32 \cf6 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\fs28 \cf6 \expnd0\expndtw0\kerning0
Read this in the wikibook before starting the lab.\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls3\ilvl0\cf9 \kerning1\expnd0\expndtw0 {\listtext	\'95	}{\field{\*\fldinst{HYPERLINK "https://github.com/angrave/SystemProgramming/wiki/Virtual-Memory%2C-Part-1%3A-Introduction-to-Virtual-Memory"}}{\fldrslt \expnd0\expndtw0\kerning0
Introduction to Virtual Memory}}\cf6 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\f1\fs48 \cf1 \cb8 \expnd0\expndtw0\kerning0
Overview
\f0\fs32 \cf6 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\fs28 \cf6 \expnd0\expndtw0\kerning0
This lab simulates the behavior of virtual memory for multiple processes. Before getting started, we highly recommend that you have read the wikibook and answer the {\field{\*\fldinst{HYPERLINK "http://goo.gl/forms/4Us4vBPJnj"}}{\fldrslt \cf9 \expnd0\expndtw0\kerning0
Google Form}}. Next, please read through the provided code as many files have comments on usage that you will find useful. There are a few different files in this lab that each represent a different component important to virtual memory. Reading through these files can start to help one understand the roles of the different hardware and software involved with virtual memory.\
You will only have to write one function in 
\f2 \expnd0\expndtw0\kerning0
mmu.c
\f0 \expnd0\expndtw0\kerning0
, but it requires a good understand of the wikibook and decent knowledge of the rest of the provided code.\
Good luck!\
\pard\pardeftab720

\f1\fs48 \cf1 \cb8 \expnd0\expndtw0\kerning0
MMU.c
\f0\fs32 \cf6 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\fs28 \cf6 \expnd0\expndtw0\kerning0
This is the function you are to complete in 
\f2 \expnd0\expndtw0\kerning0
mmu.c
\f0 \expnd0\expndtw0\kerning0
:\
\pard\pardeftab720

\f2\fs32 \cf10 \cb11 \expnd0\expndtw0\kerning0
void\cf1 \expnd0\expndtw0\kerning0
 \cf12 \expnd0\expndtw0\kerning0
*\cf13 \expnd0\expndtw0\kerning0
MMU_get_physical_address(MMU\cf1 \expnd0\expndtw0\kerning0
 \cf12 \expnd0\expndtw0\kerning0
*\cf13 \expnd0\expndtw0\kerning0
mmu,\cf1 \expnd0\expndtw0\kerning0
 \cf10 \expnd0\expndtw0\kerning0
void\cf1 \expnd0\expndtw0\kerning0
 \cf12 \expnd0\expndtw0\kerning0
*\cf13 \expnd0\expndtw0\kerning0
virtual_address,\cf1 \expnd0\expndtw0\kerning0
 \cf10 \expnd0\expndtw0\kerning0
size_t\cf1 \expnd0\expndtw0\kerning0
 \cf13 \expnd0\expndtw0\kerning0
pid)\cf1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\f0\fs28 \cf6 \cb1 \expnd0\expndtw0\kerning0
This should convert a virtual address to a physical address from a three level page table.\
mmu here is a pointer to the MMU struct defined in 
\f2 \expnd0\expndtw0\kerning0
mmu.h
\f0 \expnd0\expndtw0\kerning0
, virtual_address is the virtual address you are transforming into a physical address, and pid is the ID of this process.\
From the wikibook: \'93For most memory accesses of most programs, there is a significant chance that the TLB has cached the results\'85 the TLB [may] not have the result cached and the MMU must use the much slower page table to determine the physical frame.\'94\
Thus for any virtual address, you should check whether the result has been already cached in the TLB (see 
\f2 \expnd0\expndtw0\kerning0
tlb.h
\f0 \expnd0\expndtw0\kerning0
). Otherwise you must search the page tables.\
Virtual addresses use 64 bits with only 51 bits used for the actual virtual address as you can see from the diagram below. MISC is not counted as part of the virtual address here. In this simulation, the virtual address is broken up as follows for a three level page table.\
\pard\pardeftab720

\f2\fs32 \cf1 \cb11 \expnd0\expndtw0\kerning0
|----------|---------|---------|---------|-----------|\
  MISC (13) VPN1 (12) VPN2 (12) VPN3 (12) Offset (15)\
\pard\pardeftab720

\f0\fs28 \cf6 \cb1 \expnd0\expndtw0\kerning0
Using PageTable_get_entry() (see 
\f2 \expnd0\expndtw0\kerning0
pagetable.h
\f0 \expnd0\expndtw0\kerning0
) will allow you to traverse through the page table using the VPNx addresses. Consider what should be done if the page table or frame we are trying to access has not yet been created.\
Be sure to read all of the functions within 
\f2 \expnd0\expndtw0\kerning0
mmu.h
\f0 \expnd0\expndtw0\kerning0
, paying close attention to the comments to see the circumstances in which these functions should be called.\
NOTE: You must use the 
\f2 \expnd0\expndtw0\kerning0
PageTable_get_entry
\f0 \expnd0\expndtw0\kerning0
 and 
\f2 \expnd0\expndtw0\kerning0
PageTable_set_entry
\f0 \expnd0\expndtw0\kerning0
 functions rather than directly accessing the 
\f2 \expnd0\expndtw0\kerning0
PageTable
\f0 \expnd0\expndtw0\kerning0
 struct. The same goes for the MMU with modifying the 
\f2 \expnd0\expndtw0\kerning0
num_tlb_misses
\f0 \expnd0\expndtw0\kerning0
 and 
\f2 \expnd0\expndtw0\kerning0
num_page_faults
\f0 \expnd0\expndtw0\kerning0
. These should be done using the provided functions.\
\pard\pardeftab720

\f1\fs48 \cf1 \cb8 \expnd0\expndtw0\kerning0
Running the simulator
\f0\fs32 \cf6 \cb1 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\fs28 \cf6 \expnd0\expndtw0\kerning0
You can run the simulator with the following command (see 
\f2 \expnd0\expndtw0\kerning0
simulator.c
\f0 \expnd0\expndtw0\kerning0
):\
\pard\pardeftab720

\f2\fs32 \cf1 \cb11 \expnd0\expndtw0\kerning0
./simulator <num_processes> <num_addresses> <num_iterations> <random seed>\
\pard\pardeftab720

\f1\fs48 \cf1 \cb8 \expnd0\expndtw0\kerning0
Testing
\f0\fs32 \cf6 \cb1 \expnd0\expndtw0\kerning0
\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls4\ilvl0
\fs28 \cf6 \kerning1\expnd0\expndtw0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
Make sure you throughly test your code as usual. We have provided some tests cases, but we encourage you to write your own as well. Use the provided test cases as a reference to learn to create tests with good coverage.}