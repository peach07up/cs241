[
  {
    "timestamp": "2016-02-03 22:55:13.164214", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize past the current capacity", 
        "name": "resize_past_capacity_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize and set/get elements", 
        "name": "resize_set_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending then checking/getting", 
        "name": "append_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending some elements and checking/getting", 
        "name": "append_few_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "name": "append_100_check_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "name": "append_1mil_check_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize past capacity and set/get elements", 
        "name": "resize_past_set_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "name": "resize_set_resizesmall_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing greater than double capacity", 
        "name": "resize_greater_double_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "name": "secret_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing to 11 then 20.", 
        "name": "resize_11_20_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize and check that all elements are NULL", 
        "name": "resize_check_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending NULL", 
        "name": "append_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending an empty string", 
        "name": "append_empty_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Set null at random index", 
        "name": "set_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Set an empty string at random index", 
        "name": "set_empty_string_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "name": "resize_check_no_alloc_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "name": "Big_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting One entry", 
        "name": "insert_one", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting a bunch of times", 
        "name": "insert_many", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting beyond index", 
        "name": "insert_beyond_index", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Deleting a few entries...", 
        "name": "delete_small_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Deleting a lot...", 
        "name": "delete_full_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Checking for memory issues for vector.", 
        "name": "check_memory_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==19595== Memcheck, a memory error detector\n==19595== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==19595== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==19595== Command: ./mp/vector/svn/pliu15/vector/vector_test 18\n==19595== \nvector_test: vector.c:31: void Vector_resize(Vector *, size_t): Assertion `vector' failed.\n==19595== \n==19595== HEAP SUMMARY:\n==19595==     in use at exit: 0 bytes in 0 blocks\n==19595==   total heap usage: 2 allocs, 2 frees, 192 bytes allocated\n==19595== \n==19595== All heap blocks were freed -- no leaks are possible\n==19595== \n==19595== For counts of detected and suppressed errors, rerun with: -v\n==19595== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "name": "document_empty_file", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "name": "document_one_line", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "name": "document_ten_line", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "name": "document_multiple_write_read", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "name": "document_empty_lines", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "name": "document_check_memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==19637== Memcheck, a memory error detector\n==19637== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==19637== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==19637== Command: ././document_test 3\n==19637== \ndocument_test: vector.c:47: void Vector_insert(Vector *, size_t, const char *): Assertion `vector' failed.\n==19637== \n==19637== HEAP SUMMARY:\n==19637==     in use at exit: 8 bytes in 1 blocks\n==19637==   total heap usage: 4 allocs, 3 frees, 516 bytes allocated\n==19637== \n==19637== LEAK SUMMARY:\n==19637==    definitely lost: 0 bytes in 0 blocks\n==19637==    indirectly lost: 0 bytes in 0 blocks\n==19637==      possibly lost: 0 bytes in 0 blocks\n==19637==    still reachable: 8 bytes in 1 blocks\n==19637==         suppressed: 0 bytes in 0 blocks\n==19637== Reachable blocks (those to which a pointer was found) are not shown.\n==19637== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==19637== \n==19637== For counts of detected and suppressed errors, rerun with: -v\n==19637== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n"
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-04 14:46:54.756041", 
    "testcases": [
      {
        "description": "Vector: Resize past the current capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_capacity_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending then checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending some elements and checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_few_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_100_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_1mil_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize past capacity and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_resizesmall_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing greater than double capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_greater_double_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "secret_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing to 11 then 20.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_11_20_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and check that all elements are NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending an empty string", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_empty_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set null at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set an empty string at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_empty_string_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_no_alloc_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Big_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting One entry", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_one", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting a bunch of times", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_many", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting beyond index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_beyond_index", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a few entries...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_small_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a lot...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_full_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Checking for memory issues for vector.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==31889== Memcheck, a memory error detector\n==31889== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==31889== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==31889== Command: ./mp/vector/svn/pliu15/vector/vector_test 18\n==31889== \nvector_test: vector.c:31: void Vector_resize(Vector *, size_t): Assertion `vector' failed.\n==31889== \n==31889== HEAP SUMMARY:\n==31889==     in use at exit: 0 bytes in 0 blocks\n==31889==   total heap usage: 2 allocs, 2 frees, 192 bytes allocated\n==31889== \n==31889== All heap blocks were freed -- no leaks are possible\n==31889== \n==31889== For counts of detected and suppressed errors, rerun with: -v\n==31889== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "check_memory_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_file", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_one_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_ten_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_multiple_write_read", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_lines", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==31931== Memcheck, a memory error detector\n==31931== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==31931== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==31931== Command: ././document_test 3\n==31931== \ndocument_test: vector.c:47: void Vector_insert(Vector *, size_t, const char *): Assertion `vector' failed.\n==31931== \n==31931== HEAP SUMMARY:\n==31931==     in use at exit: 8 bytes in 1 blocks\n==31931==   total heap usage: 4 allocs, 3 frees, 516 bytes allocated\n==31931== \n==31931== LEAK SUMMARY:\n==31931==    definitely lost: 0 bytes in 0 blocks\n==31931==    indirectly lost: 0 bytes in 0 blocks\n==31931==      possibly lost: 0 bytes in 0 blocks\n==31931==    still reachable: 8 bytes in 1 blocks\n==31931==         suppressed: 0 bytes in 0 blocks\n==31931== Reachable blocks (those to which a pointer was found) are not shown.\n==31931== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==31931== \n==31931== For counts of detected and suppressed errors, rerun with: -v\n==31931== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "document_check_memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-05 02:10:42.720688", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_capacity_test", 
        "description": "Vector: Resize past the current capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_get_test", 
        "description": "Vector: Resize and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_get_test", 
        "description": "Vector: Appending then checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_few_get_test", 
        "description": "Vector: Appending some elements and checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_100_check_get_test", 
        "description": "Vector: Appending 100 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_1mil_check_get_test", 
        "description": "Vector: Appending 1000000 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_set_get_test", 
        "description": "Vector: Resize past capacity and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_resizesmall_test", 
        "description": "Vector: Resize, set elements resize smaller then get get all"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_greater_double_test", 
        "description": "Vector: Resizing greater than double capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "secret_test", 
        "description": "Vector: Secret test. Hope you don't fail this one..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_11_20_test", 
        "description": "Vector: Resizing to 11 then 20."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_NULL_test", 
        "description": "Vector: Resize and check that all elements are NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_NULL_test", 
        "description": "Vector: Appending NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_empty_test", 
        "description": "Vector: Appending an empty string"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "set_NULL_test", 
        "description": "Vector: Set null at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "set_empty_string_test", 
        "description": "Vector: Set an empty string at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_no_alloc_test", 
        "description": "Vector: Resizing under capacity and checking for no allocs."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "Big_test", 
        "description": "Vector: Too much stuff happening to count, but basically everything."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_one", 
        "description": "Vector: Inserting One entry"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_many", 
        "description": "Vector: Inserting a bunch of times"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_beyond_index", 
        "description": "Vector: Inserting beyond index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "delete_small_vector", 
        "description": "Vector: Deleting a few entries..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "delete_full_vector", 
        "description": "Vector: Deleting a lot..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==5786== Memcheck, a memory error detector\n==5786== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==5786== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==5786== Command: ./mp/vector/svn/pliu15/vector/vector_test 18\n==5786== \nvector_test: vector.c:31: void Vector_resize(Vector *, size_t): Assertion `vector' failed.\n==5786== \n==5786== HEAP SUMMARY:\n==5786==     in use at exit: 0 bytes in 0 blocks\n==5786==   total heap usage: 2 allocs, 2 frees, 192 bytes allocated\n==5786== \n==5786== All heap blocks were freed -- no leaks are possible\n==5786== \n==5786== For counts of detected and suppressed errors, rerun with: -v\n==5786== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "check_memory_vector", 
        "description": "Vector: Checking for memory issues for vector."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_file", 
        "description": "Document: Test document write/read to/from file when document is empty."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_one_line", 
        "description": "Document: Test document write/read to/from file when document has 1 line in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_ten_line", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_multiple_write_read", 
        "description": "Document: Test document write/read to/from file multiple times with changes in between."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_lines", 
        "description": "Document: Test document write/read to/from file when document has some empty lines."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==5828== Memcheck, a memory error detector\n==5828== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==5828== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==5828== Command: ././document_test 3\n==5828== \ndocument_test: vector.c:47: void Vector_insert(Vector *, size_t, const char *): Assertion `vector' failed.\n==5828== \n==5828== HEAP SUMMARY:\n==5828==     in use at exit: 8 bytes in 1 blocks\n==5828==   total heap usage: 4 allocs, 3 frees, 516 bytes allocated\n==5828== \n==5828== LEAK SUMMARY:\n==5828==    definitely lost: 0 bytes in 0 blocks\n==5828==    indirectly lost: 0 bytes in 0 blocks\n==5828==      possibly lost: 0 bytes in 0 blocks\n==5828==    still reachable: 8 bytes in 1 blocks\n==5828==         suppressed: 0 bytes in 0 blocks\n==5828== Reachable blocks (those to which a pointer was found) are not shown.\n==5828== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==5828== \n==5828== For counts of detected and suppressed errors, rerun with: -v\n==5828== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_check_memory", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind)."
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-06 00:09:05.591010", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize past the current capacity", 
        "name": "resize_past_capacity_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize and set/get elements", 
        "name": "resize_set_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending then checking/getting", 
        "name": "append_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending some elements and checking/getting", 
        "name": "append_few_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "name": "append_100_check_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "name": "append_1mil_check_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize past capacity and set/get elements", 
        "name": "resize_past_set_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "name": "resize_set_resizesmall_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing greater than double capacity", 
        "name": "resize_greater_double_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "name": "secret_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing to 11 then 20.", 
        "name": "resize_11_20_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize and check that all elements are NULL", 
        "name": "resize_check_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending NULL", 
        "name": "append_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending an empty string", 
        "name": "append_empty_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Set null at random index", 
        "name": "set_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Set an empty string at random index", 
        "name": "set_empty_string_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "name": "resize_check_no_alloc_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "name": "Big_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting One entry", 
        "name": "insert_one", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting a bunch of times", 
        "name": "insert_many", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting beyond index", 
        "name": "insert_beyond_index", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Deleting a few entries...", 
        "name": "delete_small_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Deleting a lot...", 
        "name": "delete_full_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Checking for memory issues for vector.", 
        "name": "check_memory_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==22501== Memcheck, a memory error detector\n==22501== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==22501== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==22501== Command: ./mp/vector/svn/pliu15/vector/vector_test 18\n==22501== \nvector_test: vector.c:31: void Vector_resize(Vector *, size_t): Assertion `vector' failed.\n==22501== \n==22501== HEAP SUMMARY:\n==22501==     in use at exit: 0 bytes in 0 blocks\n==22501==   total heap usage: 2 allocs, 2 frees, 192 bytes allocated\n==22501== \n==22501== All heap blocks were freed -- no leaks are possible\n==22501== \n==22501== For counts of detected and suppressed errors, rerun with: -v\n==22501== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "name": "document_empty_file", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "name": "document_one_line", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "name": "document_ten_line", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "name": "document_multiple_write_read", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "name": "document_empty_lines", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "name": "document_check_memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==22543== Memcheck, a memory error detector\n==22543== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==22543== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==22543== Command: ././document_test 3\n==22543== \ndocument_test: vector.c:47: void Vector_insert(Vector *, size_t, const char *): Assertion `vector' failed.\n==22543== \n==22543== HEAP SUMMARY:\n==22543==     in use at exit: 8 bytes in 1 blocks\n==22543==   total heap usage: 4 allocs, 3 frees, 516 bytes allocated\n==22543== \n==22543== LEAK SUMMARY:\n==22543==    definitely lost: 0 bytes in 0 blocks\n==22543==    indirectly lost: 0 bytes in 0 blocks\n==22543==      possibly lost: 0 bytes in 0 blocks\n==22543==    still reachable: 8 bytes in 1 blocks\n==22543==         suppressed: 0 bytes in 0 blocks\n==22543== Reachable blocks (those to which a pointer was found) are not shown.\n==22543== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==22543== \n==22543== For counts of detected and suppressed errors, rerun with: -v\n==22543== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n"
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-07 14:52:58.557072", 
    "testcases": [
      {
        "description": "Vector: Resize past the current capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_capacity_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending then checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending some elements and checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_few_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_100_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_1mil_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize past capacity and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_resizesmall_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing greater than double capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_greater_double_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "secret_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing to 11 then 20.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_11_20_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and check that all elements are NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending an empty string", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_empty_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set null at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set an empty string at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_empty_string_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_no_alloc_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Big_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting One entry", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_one", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting a bunch of times", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_many", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting beyond index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_beyond_index", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a few entries...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_small_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a lot...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_full_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Checking for memory issues for vector.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==27344== Memcheck, a memory error detector\n==27344== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==27344== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==27344== Command: ./mp/vector/svn/pliu15/vector/vector_test 18\n==27344== \nvector_test: vector.c:31: void Vector_resize(Vector *, size_t): Assertion `vector' failed.\n==27344== \n==27344== HEAP SUMMARY:\n==27344==     in use at exit: 0 bytes in 0 blocks\n==27344==   total heap usage: 2 allocs, 2 frees, 192 bytes allocated\n==27344== \n==27344== All heap blocks were freed -- no leaks are possible\n==27344== \n==27344== For counts of detected and suppressed errors, rerun with: -v\n==27344== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "check_memory_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_file", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_one_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_ten_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_multiple_write_read", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_lines", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==27386== Memcheck, a memory error detector\n==27386== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==27386== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==27386== Command: ././document_test 3\n==27386== \ndocument_test: vector.c:47: void Vector_insert(Vector *, size_t, const char *): Assertion `vector' failed.\n==27386== \n==27386== HEAP SUMMARY:\n==27386==     in use at exit: 8 bytes in 1 blocks\n==27386==   total heap usage: 4 allocs, 3 frees, 516 bytes allocated\n==27386== \n==27386== LEAK SUMMARY:\n==27386==    definitely lost: 0 bytes in 0 blocks\n==27386==    indirectly lost: 0 bytes in 0 blocks\n==27386==      possibly lost: 0 bytes in 0 blocks\n==27386==    still reachable: 8 bytes in 1 blocks\n==27386==         suppressed: 0 bytes in 0 blocks\n==27386== Reachable blocks (those to which a pointer was found) are not shown.\n==27386== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==27386== \n==27386== For counts of detected and suppressed errors, rerun with: -v\n==27386== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "document_check_memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-08 02:47:52.694971", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_capacity_test", 
        "description": "Vector: Resize past the current capacity"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_get_test", 
        "description": "Vector: Resize and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_get_test", 
        "description": "Vector: Appending then checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_few_get_test", 
        "description": "Vector: Appending some elements and checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_100_check_get_test", 
        "description": "Vector: Appending 100 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_1mil_check_get_test", 
        "description": "Vector: Appending 1000000 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_set_get_test", 
        "description": "Vector: Resize past capacity and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_resizesmall_test", 
        "description": "Vector: Resize, set elements resize smaller then get get all"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_greater_double_test", 
        "description": "Vector: Resizing greater than double capacity"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "secret_test", 
        "description": "Vector: Secret test. Hope you don't fail this one..."
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_11_20_test", 
        "description": "Vector: Resizing to 11 then 20."
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_NULL_test", 
        "description": "Vector: Resize and check that all elements are NULL"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_NULL_test", 
        "description": "Vector: Appending NULL"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_empty_test", 
        "description": "Vector: Appending an empty string"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "set_NULL_test", 
        "description": "Vector: Set null at random index"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "set_empty_string_test", 
        "description": "Vector: Set an empty string at random index"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_no_alloc_test", 
        "description": "Vector: Resizing under capacity and checking for no allocs."
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "Big_test", 
        "description": "Vector: Too much stuff happening to count, but basically everything."
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_one", 
        "description": "Vector: Inserting One entry"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_many", 
        "description": "Vector: Inserting a bunch of times"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_beyond_index", 
        "description": "Vector: Inserting beyond index"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "delete_small_vector", 
        "description": "Vector: Deleting a few entries..."
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "delete_full_vector", 
        "description": "Vector: Deleting a lot..."
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "check_memory_vector", 
        "description": "Vector: Checking for memory issues for vector."
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_file", 
        "description": "Document: Test document write/read to/from file when document is empty."
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_one_line", 
        "description": "Document: Test document write/read to/from file when document has 1 line in it."
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_ten_line", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it."
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_multiple_write_read", 
        "description": "Document: Test document write/read to/from file multiple times with changes in between."
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_lines", 
        "description": "Document: Test document write/read to/from file when document has some empty lines."
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_check_memory", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind)."
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-08 02:57:27.880482", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize past the current capacity", 
        "name": "resize_past_capacity_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize and set/get elements", 
        "name": "resize_set_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending then checking/getting", 
        "name": "append_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending some elements and checking/getting", 
        "name": "append_few_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "name": "append_100_check_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "name": "append_1mil_check_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize past capacity and set/get elements", 
        "name": "resize_past_set_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "name": "resize_set_resizesmall_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing greater than double capacity", 
        "name": "resize_greater_double_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "name": "secret_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing to 11 then 20.", 
        "name": "resize_11_20_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize and check that all elements are NULL", 
        "name": "resize_check_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending NULL", 
        "name": "append_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending an empty string", 
        "name": "append_empty_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Set null at random index", 
        "name": "set_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Set an empty string at random index", 
        "name": "set_empty_string_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "name": "resize_check_no_alloc_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "name": "Big_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting One entry", 
        "name": "insert_one", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting a bunch of times", 
        "name": "insert_many", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting beyond index", 
        "name": "insert_beyond_index", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Deleting a few entries...", 
        "name": "delete_small_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Deleting a lot...", 
        "name": "delete_full_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Checking for memory issues for vector.", 
        "name": "check_memory_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==20886== Memcheck, a memory error detector\n==20886== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==20886== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==20886== Command: ./mp/vector/svn/pliu15/vector/vector_test 18\n==20886== \nvector_test: vector.c:31: void Vector_resize(Vector *, size_t): Assertion `vector' failed.\n==20886== \n==20886== HEAP SUMMARY:\n==20886==     in use at exit: 0 bytes in 0 blocks\n==20886==   total heap usage: 2 allocs, 2 frees, 192 bytes allocated\n==20886== \n==20886== All heap blocks were freed -- no leaks are possible\n==20886== \n==20886== For counts of detected and suppressed errors, rerun with: -v\n==20886== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "name": "document_empty_file", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "name": "document_one_line", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "name": "document_ten_line", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "name": "document_multiple_write_read", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "name": "document_empty_lines", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "name": "document_check_memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==20928== Memcheck, a memory error detector\n==20928== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==20928== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==20928== Command: ././document_test 3\n==20928== \ndocument_test: vector.c:47: void Vector_insert(Vector *, size_t, const char *): Assertion `vector' failed.\n==20928== \n==20928== HEAP SUMMARY:\n==20928==     in use at exit: 8 bytes in 1 blocks\n==20928==   total heap usage: 4 allocs, 3 frees, 516 bytes allocated\n==20928== \n==20928== LEAK SUMMARY:\n==20928==    definitely lost: 0 bytes in 0 blocks\n==20928==    indirectly lost: 0 bytes in 0 blocks\n==20928==      possibly lost: 0 bytes in 0 blocks\n==20928==    still reachable: 8 bytes in 1 blocks\n==20928==         suppressed: 0 bytes in 0 blocks\n==20928== Reachable blocks (those to which a pointer was found) are not shown.\n==20928== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==20928== \n==20928== For counts of detected and suppressed errors, rerun with: -v\n==20928== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n"
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-09 09:06:03.523882", 
    "testcases": [
      {
        "description": "Vector: Resize past the current capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "resize_past_capacity_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "resize_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending then checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "append_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending some elements and checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "append_few_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "append_100_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "append_1mil_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize past capacity and set/get elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "resize_past_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "resize_set_resizesmall_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing greater than double capacity", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "resize_greater_double_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "secret_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing to 11 then 20.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "resize_11_20_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and check that all elements are NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "resize_check_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "append_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending an empty string", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "append_empty_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set null at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "set_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set an empty string at random index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "set_empty_string_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "resize_check_no_alloc_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "Big_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting One entry", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "insert_one", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting a bunch of times", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "insert_many", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting beyond index", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "insert_beyond_index", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a few entries...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "delete_small_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a lot...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "delete_full_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Checking for memory issues for vector.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "check_memory_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "document_empty_file", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "document_one_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "document_ten_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "document_multiple_write_read", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "document_empty_lines", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nvector.c:25:9: error: implicit declaration of function 'vector_resize' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    if (vector_resize(this, 10) < 0) {\n        ^\nvector.c:25:9: note: did you mean 'Vector_resize'?\nvector.c:14:6: note: 'Vector_resize' declared here\nvoid Vector_resize(Vector *vector, size_t new_size);\n     ^\nvector.c:26:9: error: implicit declaration of function 'vector_destroy' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n        vector_destroy(this);\n        ^\nvector.c:26:9: note: did you mean 'Vector_destroy'?\nvector.c:15:6: note: 'Vector_destroy' declared here\nvoid Vector_destroy(Vector *vector);\n     ^\nvector.c:59:16: error: use of undeclared identifier 'false'\n        return false;\n               ^\nvector.c:62:19: error: incompatible pointer types assigning to 'char **' from 'void **' [-Werror,-Wincompatible-pointer-types]\n    vector->array = array;\n                  ^ ~~~~~\nvector.c:65:12: error: use of undeclared identifier 'true'\n    return true;\n           ^\nvector.c:71:28: error: implicit declaration of function 'vector_create' is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n    struct vector *clone = vector_create();\n                           ^\nvector.c:71:28: note: did you mean 'Vector_create'?\nvector.c:17:9: note: 'Vector_create' declared here\nVector *Vector_create() {\n        ^\nvector.c:71:20: error: incompatible integer to pointer conversion initializing 'struct vector *' with an expression of type 'int' [-Werror,-Wint-conversion]\n    struct vector *clone = vector_create();\n                   ^       ~~~~~~~~~~~~~~~\nvector.c:73:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:76:14: error: incomplete definition of type 'struct vector'\n    if (clone->capacity < str->size) {\n        ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:76:30: error: member reference base type 'const char' is not a structure or union\n    if (clone->capacity < str->size) {\n                          ~~~^ ~~~~\nvector.c:77:38: error: member reference base type 'const char' is not a structure or union\n        if (!vector_resize(clone, str->size)) {\n                                  ~~~^ ~~~~\nvector.c:79:13: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n            return NULL;\n            ^      ~~~~\nvector.c:83:17: error: incomplete definition of type 'struct vector'\n    memcpy(clone->array, str->array, str->size * sizeof(void *));\n           ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:10: error: incomplete definition of type 'struct vector'\n    clone->size = str->size;\n    ~~~~~^\nvector.c:71:12: note: forward declaration of 'struct vector'\n    struct vector *clone = vector_create();\n           ^\nvector.c:84:22: error: member reference base type 'const char' is not a structure or union\n    clone->size = str->size;\n                  ~~~^ ~~~~\nvector.c:87:9: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n        return NULL;\n        ^      ~~~~\nvector.c:90:11: error: incompatible pointer types assigning to 'struct vector *' from 'char *' [-Werror,-Wincompatible-pointer-types]\n    clone = vector->array[index];\n          ^ ~~~~~~~~~~~~~~~~~~~~\nvector.c:91:28: error: use of undeclared identifier 'array'\n    vector->array[index] = array;\n                           ^\nvector.c:92:5: error: void function 'Vector_set' should not return a value [-Wreturn-type]\n    return clone;\n    ^      ~~~~~\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n20 errors generated.\nmake: *** [.objs/vector-release.o] Error 1\n", 
        "name": "document_check_memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-05-10 23:00:35.583574", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_past_capacity_test", 
        "description": "Vector: Resize past the current capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_set_get_test", 
        "description": "Vector: Resize and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_get_test", 
        "description": "Vector: Appending then checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_few_get_test", 
        "description": "Vector: Appending some elements and checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_100_check_get_test", 
        "description": "Vector: Appending 100 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_1mil_check_get_test", 
        "description": "Vector: Appending 1000000 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_past_set_get_test", 
        "description": "Vector: Resize past capacity and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_set_resizesmall_test", 
        "description": "Vector: Resize, set elements resize smaller then get get all"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_greater_double_test", 
        "description": "Vector: Resizing greater than double capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "secret_test", 
        "description": "Vector: Secret test. Hope you don't fail this one..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_11_20_test", 
        "description": "Vector: Resizing to 11 then 20."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_check_NULL_test", 
        "description": "Vector: Resize and check that all elements are NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_NULL_test", 
        "description": "Vector: Appending NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_empty_test", 
        "description": "Vector: Appending an empty string"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "set_NULL_test", 
        "description": "Vector: Set null at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "set_empty_string_test", 
        "description": "Vector: Set an empty string at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_check_no_alloc_test", 
        "description": "Vector: Resizing under capacity and checking for no allocs."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "Big_test", 
        "description": "Vector: Too much stuff happening to count, but basically everything."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "insert_one", 
        "description": "Vector: Inserting One entry"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "insert_many", 
        "description": "Vector: Inserting a bunch of times"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "insert_beyond_index", 
        "description": "Vector: Inserting beyond index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "delete_small_vector", 
        "description": "Vector: Deleting a few entries..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "delete_full_vector", 
        "description": "Vector: Deleting a lot..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==22126== Memcheck, a memory error detector\n==22126== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==22126== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==22126== Command: .../pliu15/vector/vector_test 18\n==22126== \n==22126== \n==22126== HEAP SUMMARY:\n==22126==     in use at exit: 0 bytes in 0 blocks\n==22126==   total heap usage: 14 allocs, 14 frees, 396 bytes allocated\n==22126== \n==22126== All heap blocks were freed -- no leaks are possible\n==22126== \n==22126== For counts of detected and suppressed errors, rerun with: -v\n==22126== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "check_memory_vector", 
        "description": "Vector: Checking for memory issues for vector."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_empty_file", 
        "description": "Document: Test document write/read to/from file when document is empty."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_one_line", 
        "description": "Document: Test document write/read to/from file when document has 1 line in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_ten_line", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_multiple_write_read", 
        "description": "Document: Test document write/read to/from file multiple times with changes in between."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_empty_lines", 
        "description": "Document: Test document write/read to/from file when document has some empty lines."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==22156== Memcheck, a memory error detector\n==22156== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==22156== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==22156== Command: ./document_test 3\n==22156== \n==22156== Invalid write of size 8\n==22156==    at 0x4C2E0B3: memcpy@GLIBC_2.2.5 (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==22156==    by 0x40109B: Vector_insert (in .../pliu15/vector/document_test)\n==22156==    by 0x401423: test_write_ten_line_file (in .../pliu15/vector/document_test)\n==22156==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==22156==  Address 0x53fa140 is 0 bytes after a block of size 80 alloc'd\n==22156==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==22156==    by 0x400DB1: Vector_create (in .../pliu15/vector/document_test)\n==22156==    by 0x400A74: Document_create (in .../pliu15/vector/document_test)\n==22156==    by 0x40136F: test_write_ten_line_file (in .../pliu15/vector/document_test)\n==22156==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==22156== \n==22156== \n==22156== HEAP SUMMARY:\n==22156==     in use at exit: 0 bytes in 0 blocks\n==22156==   total heap usage: 28 allocs, 28 frees, 2,496 bytes allocated\n==22156== \n==22156== All heap blocks were freed -- no leaks are possible\n==22156== \n==22156== For counts of detected and suppressed errors, rerun with: -v\n==22156== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "document_check_memory", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind)."
      }
    ], 
    "checksum": "b5ef0abb53e82d3aba6bd217c2887ed919b63c09  vector.c\necd3736595cb78ca8bda90cd31b41cdcd6938ef9  document.c", 
    "revision": "87965"
  }
]